; Rule file for parsing the log file of the pacman package manager

; Rule identifier
[Error]
; Type of rule, possible values are: Regex (only the regex is applied), Filtered (only filters are applied), Combined (this being the combination of both). The way in which this is done is parser dependent.
Type = Regex
; Levels to filter for, supported levels vary, this is mostly used with the journal which supported levels are: DEBUG, INFO, NOTICE, WARNING, ERR, CRIT, ALERT, EMERG
Levels = WARNING, ERR, CRIT, EMERG
; Since specifies the starting time for filtering, no events older than this will be considered. It permits absolute values or relative ones in the format: -10m for the last 10 minutes, h for hours and s for seconds. This only works with some parsers (like the journal for example)
Since = -60m
; Until specifies the ending time for filtering, no events newer than this will be considered. It permits absolute values or relative ones in the format: -10m for the last 10 minutes, h for hours and s for seconds. It also allows for the keyword NOW which means the current time. This only works with some parsers (like the journal for example)
Until = -5m
; Filters, each filter must be separated by a comma. Keep in mind that currently the filter delimiter is , that is, comma. As such you cannot use this character in your filters (yet)
Filters = OPTION=option1,option2=opt
;Regex the regex to apply.
Regex = (?P<Timestamp>[a-zA-Z]+ [0-9]+ [0-9:]+) (?P<Hostname>[a-zA-Z0-9-_]+) (?P<Process>[a-zA-Z0-9-_]+)\[(?P<PID>[0-9]+)\]:(?P<Message>.*)

; Another rule
[Warning]
; Just with the minimum fields, keep in mind though, that depending on the module loading the rule it might fail. Technically no field (with the exception of Type) is mandatory, however it depends on the module. In a future the modules will handle it smartly, for now it is the user responsability to define the rules correctly.
Type = Regex
Regex = \[(?P<Timestamp>[0-9-:+T]+)\] \[(?P<Component>[A-Z-]+)\] .*(?P<Type>warning|Warning|WARNING)(?P<Content>.*)